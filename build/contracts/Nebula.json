{
  "contractName": "Nebula",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Nebula.sol\":\"Nebula\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Nebula.sol\":{\"keccak256\":\"0xa8f405145649e8bcd1dc517a1fe3d67ea66b760bfb7dd109bea9f8d913e7bcbd\",\"urls\":[\"bzz-raw://5c3f52fba6d62dff6c11661621ae48d4a58f67e429dfb438092700ec40f99895\",\"dweb:/ipfs/Qmabw2SCAzZXXyxRAsGLYiSY5hS4KfZAmbbKgJnCQxkF9x\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820966fa4a7a58be184849ccc78c70e9f3adc940ac80c00b9355e89da77d4abc8b264736f6c63430005100032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820966fa4a7a58be184849ccc78c70e9f3adc940ac80c00b9355e89da77d4abc8b264736f6c63430005100032",
  "sourceMap": "66:487:1:-;;;178:26;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:26:1;66:487;;;;;;",
  "deployedSourceMap": "66:487:1:-;;;534:8;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Nebula {\n  \n  //State variables\n\n  //Events - publicize actions to external listeners\n\n  //functions\n  constructor() public {\n  }\n\n  // Fallback function - Called if other functions don't match call or\n  // sent ether without data\n  // Typically, called when invalid data is sent\n  // Added so ether sent to this contract is reverted if the contract fails\n  // otherwise, the sender's money is transferred to contract\n  function () external payable {\n        revert();\n    }\n\n\n}\n",
  "sourcePath": "/Users/madtrix/Documents/repos/blockchain-developer-bootcamp-final-project/contracts/Nebula.sol",
  "ast": {
    "absolutePath": "project:/contracts/Nebula.sol",
    "exportedSymbols": {
      "Nebula": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46
        ],
        "name": "Nebula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "199:5:1",
              "statements": []
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:1"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:0:1"
            },
            "scope": 46,
            "src": "178:26:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "524:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        66,
                        67
                      ],
                      "referencedDeclaration": 66,
                      "src": "534:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "534:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:2:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:1"
            },
            "scope": 46,
            "src": "495:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 47,
        "src": "66:487:1"
      }
    ],
    "src": "32:522:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Nebula.sol",
      "exportedSymbols": {
        "Nebula": [
          46
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            46
          ],
          "name": "Nebula",
          "scope": 47
        },
        "children": [
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 46,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 35,
                "name": "ParameterList",
                "src": "189:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 36,
                "name": "ParameterList",
                "src": "199:0:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 37,
                "name": "Block",
                "src": "199:5:1"
              }
            ],
            "id": 38,
            "name": "FunctionDefinition",
            "src": "178:26:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 46,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 39,
                "name": "ParameterList",
                "src": "504:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40,
                "name": "ParameterList",
                "src": "524:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                66,
                                67
                              ],
                              "referencedDeclaration": 66,
                              "type": "function () pure",
                              "value": "revert"
                            },
                            "id": 41,
                            "name": "Identifier",
                            "src": "534:6:1"
                          }
                        ],
                        "id": 42,
                        "name": "FunctionCall",
                        "src": "534:8:1"
                      }
                    ],
                    "id": 43,
                    "name": "ExpressionStatement",
                    "src": "534:8:1"
                  }
                ],
                "id": 44,
                "name": "Block",
                "src": "524:25:1"
              }
            ],
            "id": 45,
            "name": "FunctionDefinition",
            "src": "495:54:1"
          }
        ],
        "id": 46,
        "name": "ContractDefinition",
        "src": "66:487:1"
      }
    ],
    "id": 47,
    "name": "SourceUnit",
    "src": "32:522:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-24T13:28:54.167Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}